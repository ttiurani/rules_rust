workspace(name = "failure")

local_repository(
    name = "rules_rust",
    path = "../../",
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2021",
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies(bootstrap = True)

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository")

##############################
##
## MISSING CRATE FEATURES
##
## https://github.com/bazelbuild/rules_rust/issues/1850
##

crates_repository(
    name = "crate_index_missing_crate_features",
    cargo_lockfile = "//missing_crate_features:Cargo.lock",
    generator = "@cargo_bazel_bootstrap//:cargo-bazel",
    lockfile = "//missing_crate_features:cargo-bazel-lock.json",
    manifests = [
        "//missing_crate_features:Cargo.toml",
        "//missing_crate_features/aead_dep:Cargo.toml",
        # NB: If this is commented, and similar changes made in missing_crate_features/Cargo.toml,
        # "cargo generate-lockfile && CARGO_BAZEL_REPIN=true bazel build //missing_crate_features/aead_dep:aead_dep" succeeds
        "//missing_crate_features/age_dep:Cargo.toml",
    ],
)

load(
    "@crate_index_missing_crate_features//:defs.bzl",
    missing_crate_features_crate_repositories = "crate_repositories",
)

missing_crate_features_crate_repositories()

##############################
##
## EXTRA CRATE FEATURES
##

load("@rules_rust//wasm_bindgen:repositories.bzl", "rust_wasm_bindgen_dependencies", "rust_wasm_bindgen_register_toolchains")

rust_wasm_bindgen_dependencies()

rust_wasm_bindgen_register_toolchains()

crates_repository(
    name = "crate_index_extra_crate_features",
    cargo_lockfile = "//extra_crate_features:Cargo.lock",
    generator = "@cargo_bazel_bootstrap//:cargo-bazel",
    lockfile = "//extra_crate_features:cargo-bazel-lock.json",
    manifests = [
        "//extra_crate_features:Cargo.toml",
        "//extra_crate_features/common:Cargo.toml",
        "//extra_crate_features/wasm:Cargo.toml",
        # NB: If this is commented, and similar changes made in extra_crate_features/Cargo.toml,
        # "cargo generate-lockfile && CARGO_BAZEL_REPIN=true bazel build //extra_crate_features/wasm:wasm" succeeds
        "//extra_crate_features/net:Cargo.toml",
    ],
)

load(
    "@crate_index_extra_crate_features//:defs.bzl",
    extra_crate_features_crate_repositories = "crate_repositories",
)

extra_crate_features_crate_repositories()

##############################
##
## SERDE DERIVE FAILURE
##
## https://github.com/bazelbuild/rules_rust/issues/2071
##

crates_repository(
    name = "crate_index_serde_derive",
    cargo_lockfile = "//serde_derive:Cargo.lock",
    generator = "@cargo_bazel_bootstrap//:cargo-bazel",
    lockfile = "//serde_derive:cargo-bazel-lock.json",
    packages = {
        "serde": crate.spec(version = "1.0.184"),
        "serde_derive": crate.spec(version = "1.0.184"),
    },
)

load(
    "@crate_index_serde_derive//:defs.bzl",
    serde_derive_crate_repositories = "crate_repositories",
)

serde_derive_crate_repositories()
