workspace(name = "failure")

local_repository(
    name = "rules_rust",
    path = "../../",
)

local_repository(
    name = "rules_rust",
    path = "../../",
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2018",
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies(bootstrap = True)

load("@rules_rust//crate_universe:defs.bzl", "crates_repository")

crates_repository(
    name = "crate_index_crypto_common_failure",
    cargo_lockfile = "//:Cargo.lock",
    # `generator` is not necessary in official releases.
    # See load satement for `cargo_bazel_bootstrap`.
    generator = "@cargo_bazel_bootstrap//:cargo-bazel",
    lockfile = "//:cargo-bazel-lock.json",
    manifests = [
        "//:Cargo.toml",
        "//aead_dep:Cargo.toml",
        # TODO: If this is commented, and similar changes made in Cargo.toml, "cargo generate-lockfile && CARGO_BAZEL_REPIN=true bazel build //aead_dep:aead_dep" succeeds
        "//age_dep:Cargo.toml",
    ],
)

load(
    "@crate_index_crypto_common_failure//:defs.bzl",
    crypto_common_failure_crate_repositories = "crate_repositories",
)

crypto_common_failure_crate_repositories()
